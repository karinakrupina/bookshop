// Generated from JSON.g4 by ANTLR 4.7.1
// jshint ignore: start
var antlr4 = require('antlr4/index');



  function getLoc(ctx,ret) {
    if(ctx.start) {
      ret.start = {
        offset:ctx.start.start,
        start: ctx.start.start,
        stop: ctx.start.stop,
        line: ctx.start.line,
        column: ctx.start.column + 1
      }
    }
    if(ctx.stop) {
      ret.stop = {
        offset: ctx.stop.stop+1,
        start: ctx.stop.start,
        stop: ctx.stop.stop,
        line: ctx.stop.line,
        column: ctx.stop.column + 1 + (ctx.stop.stop - ctx.stop.start) // end of last token
      }
    }
  } // getLoc

  function unquote(s) {
    return JSON.parse(s); // unquote for free
  }



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u0010\u00a5\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003",
    "\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0007\u000bI\n\u000b",
    "\f\u000b\u000e\u000bL\u000b\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\f\u0005\fS\n\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003",
    "\r\u0003\u000e\u0003\u000e\u0003\u000f\u0005\u000f^\n\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0006\u000fc\n\u000f\r\u000f\u000e\u000fd\u0003",
    "\u000f\u0005\u000fh\n\u000f\u0003\u000f\u0005\u000fk\n\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000fq\n\u000f\u0003\u000f",
    "\u0005\u000ft\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0007\u0010",
    "y\n\u0010\f\u0010\u000e\u0010|\u000b\u0010\u0005\u0010~\n\u0010\u0003",
    "\u0011\u0003\u0011\u0005\u0011\u0082\n\u0011\u0003\u0011\u0003\u0011",
    "\u0003\u0012\u0006\u0012\u0087\n\u0012\r\u0012\u000e\u0012\u0088\u0003",
    "\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0007",
    "\u0013\u0091\n\u0013\f\u0013\u000e\u0013\u0094\u000b\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0007\u0014\u009f\n\u0014\f\u0014\u000e\u0014",
    "\u00a2\u000b\u0014\u0003\u0014\u0003\u0014\u0003\u0092\u0002\u0015\u0003",
    "\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011",
    "\n\u0013\u000b\u0015\f\u0017\u0002\u0019\u0002\u001b\u0002\u001d\r\u001f",
    "\u0002!\u0002#\u000e%\u000f\'\u0010\u0003\u0002\u000b\u0004\u0002$$",
    "^^\n\u0002$$11^^ddhhppttvv\u0005\u00022;CHch\u0003\u00022;\u0003\u0002",
    "3;\u0004\u0002GGgg\u0004\u0002--//\u0005\u0002\u000b\f\u000f\u000f\"",
    "\"\u0004\u0002\f\f\u000f\u000f\u0002\u00af\u0002\u0003\u0003\u0002\u0002",
    "\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002",
    "\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002",
    "\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002",
    "\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002",
    "\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002",
    "\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002",
    "\u0002\'\u0003\u0002\u0002\u0002\u0003)\u0003\u0002\u0002\u0002\u0005",
    "+\u0003\u0002\u0002\u0002\u0007-\u0003\u0002\u0002\u0002\t/\u0003\u0002",
    "\u0002\u0002\u000b1\u0003\u0002\u0002\u0002\r3\u0003\u0002\u0002\u0002",
    "\u000f5\u0003\u0002\u0002\u0002\u0011:\u0003\u0002\u0002\u0002\u0013",
    "@\u0003\u0002\u0002\u0002\u0015E\u0003\u0002\u0002\u0002\u0017O\u0003",
    "\u0002\u0002\u0002\u0019T\u0003\u0002\u0002\u0002\u001bZ\u0003\u0002",
    "\u0002\u0002\u001ds\u0003\u0002\u0002\u0002\u001f}\u0003\u0002\u0002",
    "\u0002!\u007f\u0003\u0002\u0002\u0002#\u0086\u0003\u0002\u0002\u0002",
    "%\u008c\u0003\u0002\u0002\u0002\'\u009a\u0003\u0002\u0002\u0002)*\u0007",
    "}\u0002\u0002*\u0004\u0003\u0002\u0002\u0002+,\u0007.\u0002\u0002,\u0006",
    "\u0003\u0002\u0002\u0002-.\u0007\u007f\u0002\u0002.\b\u0003\u0002\u0002",
    "\u0002/0\u0007<\u0002\u00020\n\u0003\u0002\u0002\u000212\u0007]\u0002",
    "\u00022\f\u0003\u0002\u0002\u000234\u0007_\u0002\u00024\u000e\u0003",
    "\u0002\u0002\u000256\u0007v\u0002\u000267\u0007t\u0002\u000278\u0007",
    "w\u0002\u000289\u0007g\u0002\u00029\u0010\u0003\u0002\u0002\u0002:;",
    "\u0007h\u0002\u0002;<\u0007c\u0002\u0002<=\u0007n\u0002\u0002=>\u0007",
    "u\u0002\u0002>?\u0007g\u0002\u0002?\u0012\u0003\u0002\u0002\u0002@A",
    "\u0007p\u0002\u0002AB\u0007w\u0002\u0002BC\u0007n\u0002\u0002CD\u0007",
    "n\u0002\u0002D\u0014\u0003\u0002\u0002\u0002EJ\u0007$\u0002\u0002FI",
    "\u0005\u0017\f\u0002GI\n\u0002\u0002\u0002HF\u0003\u0002\u0002\u0002",
    "HG\u0003\u0002\u0002\u0002IL\u0003\u0002\u0002\u0002JH\u0003\u0002\u0002",
    "\u0002JK\u0003\u0002\u0002\u0002KM\u0003\u0002\u0002\u0002LJ\u0003\u0002",
    "\u0002\u0002MN\u0007$\u0002\u0002N\u0016\u0003\u0002\u0002\u0002OR\u0007",
    "^\u0002\u0002PS\t\u0003\u0002\u0002QS\u0005\u0019\r\u0002RP\u0003\u0002",
    "\u0002\u0002RQ\u0003\u0002\u0002\u0002S\u0018\u0003\u0002\u0002\u0002",
    "TU\u0007w\u0002\u0002UV\u0005\u001b\u000e\u0002VW\u0005\u001b\u000e",
    "\u0002WX\u0005\u001b\u000e\u0002XY\u0005\u001b\u000e\u0002Y\u001a\u0003",
    "\u0002\u0002\u0002Z[\t\u0004\u0002\u0002[\u001c\u0003\u0002\u0002\u0002",
    "\\^\u0007/\u0002\u0002]\\\u0003\u0002\u0002\u0002]^\u0003\u0002\u0002",
    "\u0002^_\u0003\u0002\u0002\u0002_`\u0005\u001f\u0010\u0002`b\u00070",
    "\u0002\u0002ac\t\u0005\u0002\u0002ba\u0003\u0002\u0002\u0002cd\u0003",
    "\u0002\u0002\u0002db\u0003\u0002\u0002\u0002de\u0003\u0002\u0002\u0002",
    "eg\u0003\u0002\u0002\u0002fh\u0005!\u0011\u0002gf\u0003\u0002\u0002",
    "\u0002gh\u0003\u0002\u0002\u0002ht\u0003\u0002\u0002\u0002ik\u0007/",
    "\u0002\u0002ji\u0003\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002kl\u0003",
    "\u0002\u0002\u0002lm\u0005\u001f\u0010\u0002mn\u0005!\u0011\u0002nt",
    "\u0003\u0002\u0002\u0002oq\u0007/\u0002\u0002po\u0003\u0002\u0002\u0002",
    "pq\u0003\u0002\u0002\u0002qr\u0003\u0002\u0002\u0002rt\u0005\u001f\u0010",
    "\u0002s]\u0003\u0002\u0002\u0002sj\u0003\u0002\u0002\u0002sp\u0003\u0002",
    "\u0002\u0002t\u001e\u0003\u0002\u0002\u0002u~\u00072\u0002\u0002vz\t",
    "\u0006\u0002\u0002wy\t\u0005\u0002\u0002xw\u0003\u0002\u0002\u0002y",
    "|\u0003\u0002\u0002\u0002zx\u0003\u0002\u0002\u0002z{\u0003\u0002\u0002",
    "\u0002{~\u0003\u0002\u0002\u0002|z\u0003\u0002\u0002\u0002}u\u0003\u0002",
    "\u0002\u0002}v\u0003\u0002\u0002\u0002~ \u0003\u0002\u0002\u0002\u007f",
    "\u0081\t\u0007\u0002\u0002\u0080\u0082\t\b\u0002\u0002\u0081\u0080\u0003",
    "\u0002\u0002\u0002\u0081\u0082\u0003\u0002\u0002\u0002\u0082\u0083\u0003",
    "\u0002\u0002\u0002\u0083\u0084\u0005\u001f\u0010\u0002\u0084\"\u0003",
    "\u0002\u0002\u0002\u0085\u0087\t\t\u0002\u0002\u0086\u0085\u0003\u0002",
    "\u0002\u0002\u0087\u0088\u0003\u0002\u0002\u0002\u0088\u0086\u0003\u0002",
    "\u0002\u0002\u0088\u0089\u0003\u0002\u0002\u0002\u0089\u008a\u0003\u0002",
    "\u0002\u0002\u008a\u008b\b\u0012\u0002\u0002\u008b$\u0003\u0002\u0002",
    "\u0002\u008c\u008d\u00071\u0002\u0002\u008d\u008e\u0007,\u0002\u0002",
    "\u008e\u0092\u0003\u0002\u0002\u0002\u008f\u0091\u000b\u0002\u0002\u0002",
    "\u0090\u008f\u0003\u0002\u0002\u0002\u0091\u0094\u0003\u0002\u0002\u0002",
    "\u0092\u0093\u0003\u0002\u0002\u0002\u0092\u0090\u0003\u0002\u0002\u0002",
    "\u0093\u0095\u0003\u0002\u0002\u0002\u0094\u0092\u0003\u0002\u0002\u0002",
    "\u0095\u0096\u0007,\u0002\u0002\u0096\u0097\u00071\u0002\u0002\u0097",
    "\u0098\u0003\u0002\u0002\u0002\u0098\u0099\b\u0013\u0002\u0002\u0099",
    "&\u0003\u0002\u0002\u0002\u009a\u009b\u00071\u0002\u0002\u009b\u009c",
    "\u00071\u0002\u0002\u009c\u00a0\u0003\u0002\u0002\u0002\u009d\u009f",
    "\n\n\u0002\u0002\u009e\u009d\u0003\u0002\u0002\u0002\u009f\u00a2\u0003",
    "\u0002\u0002\u0002\u00a0\u009e\u0003\u0002\u0002\u0002\u00a0\u00a1\u0003",
    "\u0002\u0002\u0002\u00a1\u00a3\u0003\u0002\u0002\u0002\u00a2\u00a0\u0003",
    "\u0002\u0002\u0002\u00a3\u00a4\b\u0014\u0002\u0002\u00a4(\u0003\u0002",
    "\u0002\u0002\u0012\u0002HJR]dgjpsz}\u0081\u0088\u0092\u00a0\u0003\b",
    "\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function JSONLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

JSONLexer.prototype = Object.create(antlr4.Lexer.prototype);
JSONLexer.prototype.constructor = JSONLexer;

Object.defineProperty(JSONLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

JSONLexer.EOF = antlr4.Token.EOF;
JSONLexer.T__0 = 1;
JSONLexer.T__1 = 2;
JSONLexer.T__2 = 3;
JSONLexer.T__3 = 4;
JSONLexer.T__4 = 5;
JSONLexer.T__5 = 6;
JSONLexer.T__6 = 7;
JSONLexer.T__7 = 8;
JSONLexer.T__8 = 9;
JSONLexer.STRING = 10;
JSONLexer.NUMBER = 11;
JSONLexer.WHITESPACE = 12;
JSONLexer.MULTI_LINE_COMMENT = 13;
JSONLexer.SINGLE_LINE_COMMENT = 14;

JSONLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

JSONLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

JSONLexer.prototype.literalNames = [ null, "'{'", "','", "'}'", "':'", "'['", 
                                     "']'", "'true'", "'false'", "'null'" ];

JSONLexer.prototype.symbolicNames = [ null, null, null, null, null, null, 
                                      null, null, null, null, "STRING", 
                                      "NUMBER", "WHITESPACE", "MULTI_LINE_COMMENT", 
                                      "SINGLE_LINE_COMMENT" ];

JSONLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", 
                                  "T__5", "T__6", "T__7", "T__8", "STRING", 
                                  "ESC", "UNICODE", "HEX", "NUMBER", "INT", 
                                  "EXP", "WHITESPACE", "MULTI_LINE_COMMENT", 
                                  "SINGLE_LINE_COMMENT" ];

JSONLexer.prototype.grammarFileName = "JSON.g4";



exports.JSONLexer = JSONLexer;

