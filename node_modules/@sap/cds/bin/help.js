module.exports = Object.assign (help, {help:`
# USAGE

    *cds* <command> [<args>]


# COMMANDS

  *c* | *compile*    ...individual models (= the default)
  *d* | *deploy*     ...data models to a database
  *s* | *serve*      ...service models to REST clients
  *b* | *build*      ...whole modules or projects
  *i* | *init*       ...jump-starts a new project
  *e* | *env*        get/set current cds configuration
  *r* | *repl*       cds's read-eval-event-loop
  *h* | *help*       shows usage for cds and individual commands
  *v* | *version*    prints detailed version information

  *cds help* <command> gives more help about each (also with *--help*)
  *cds* <file> without <command> defaults to *cds compile*.
  *cds* without any arguments shows this help.


# EXAMPLES

  *cds* model.cds
  *cds* compile model.cds
  *cds* compile model.json --to cdl
  *cds* serve cat-service
  *cds* build --clean
  *cds* compile --help
`})

function help ([topic]=[]) {
  try {
    let txt = !topic ? help.help : require('./' + topic).help
    if (txt) return console.log(format(txt))
  } catch (e) {
    if (e.code !== 'MODULE_NOT_FOUND') throw e
  }
  throw new Error(`Didn't find a help topic for ${topic}.`)
}

function format (poorMarkdown) {
  return poorMarkdown
  .replace(/\n# ([^\n]*)\n/g, '\n\x1b[1m$1\x1b[0m\n')
  .replace(/ \*([^*]+)\*/g, ' \x1b[1m$1\x1b[0m')
  .replace(/ _([^_]+)_/g, ' \x1b[4m$1\x1b[0m')
}

/* eslint no-console: off */
if (!module.parent)  help (['init'])