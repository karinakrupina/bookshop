const _env = /^--(sql|build-.*|cdsc-.*|odata-.*|folders-.*)$/
const _global = { flags: { '--new-csn':1 }, options: {}, }

module.exports.parseArgs = (cmd, args) => {

  const options = {}
  const argv = []
  const _flags = cmd.flags || []
  const _options = cmd.options || []
  const _shortcuts = cmd.shortcuts || []
  let env = null

  if (args.length>0)  for (let i = 0; i < args.length; ++i) {
    let a = args[i]
    if (!a.startsWith('-')) {
      argv.push(a)
      continue
    }
    let ox = _shortcuts.indexOf(a)
    if (ox >= 0) {
      if (ox >= _options.length) { options[_flags [ox - _options.length].slice(2)] = true; continue }
      else a = _options[ox]
    } else {
      ox = _flags.indexOf(a);
      if (ox >= 0) { options[_flags[ox].slice(2)] = true; continue }
    }
    ox = _options.indexOf(a)
    if (ox >= 0) {
      let optValue = true
      if (args[i+1])  optValue = args[++i]
      options[_options[ox].slice(2)] = optValue
      continue
    }
    if (a in _global.flags) {
      options[a] = true
      add2env (a,true)
      continue
    }
    if (a in _global.options || _env.test(a)) {
      const v = options[a] = args[++i]
      add2env (a,v)
      continue
    }
    throw new Error('invalid option: ' + a)
  }

  if (env) {
    const cds = require ('../../lib/index.js')
    cds.env.add (env)
  }

  return { argv, options }

  function add2env(a,v) {
    if (a === '--new-csn')  {
      a = '--cdsc-newCsn'
      v = true
    }
    let o=env || (env={}), path = a.slice(2).split('-')
    while (path.length > 1) {
      let p = path.shift()
      o = o[p] || (o[p] = {})
    }
    return o[path.shift()] = v
  }
}
