/**
 *  Recommended types for language, currency and country elements
 *  along with corresponding code lists to be reused.
 *  Use these types in your entities if you want to use
 *  the default CodeLists provided herein.
 */

type Language : Association to sap.common.Languages;
type Currency : Association to sap.common.Currencies;
type Country  : Association to sap.common.Countries;

/**
 *  Plain types without links to code list entities.
 *  Use these types in your entities if you don't want to use
 *  the default CodeLists provided herein but link them to own
 *  respective entities.
 */
type LanguageCode : String(5);
type CountryCode  : String(3);
type CurrencyCode : String(3);


context sap.common {
Â 
  entity Languages  : CodeList { key code : LanguageCode; }
  entity Countries  : CodeList { key code : CountryCode; }
  entity Currencies : CodeList { key code : CurrencyCode;
    symbol : String(2);
  }

  @cds.autoexpose @cds.persistence.skip:'if-unused'
  abstract entity CodeList {
    name  : localized String(255) @title:'{i18n>Name}';
    descr : localized String(1000) @title:'{i18n>Description}';
  }

}


/**
 * Aspect for entities with canonical universal IDs.
 */
abstract entity cuid {
  key ID : UUID;  //> automatically filled in
}

/**
 * Aspect to capture changes by user and name.
 */
type managed {
  modifiedAt : DateTime @cds.on.update: $now @odata.etag;
  createdAt  : DateTime @cds.on.insert: $now;
  createdBy  : User     @cds.on.insert: $user;
  modifiedBy : User     @cds.on.update: $user;
}

/**
 * Aspect for entities with temporal data.
 */
@cds.temporal.valid:{ from:validFrom, to:validTo }
abstract entity temporal {
  // @cds.temporal.key tID : UUID;
  validFrom : DateTime;
  validTo : DateTime;
}


/**
 * Canonical user IDs
 */
type User : String(255);



//---------------------------------------------------------------------------
// Annotations for Fiori UIs...

  annotate LanguageCode with @Common.ValueList.entity:'sap_common_Languages';
  annotate CurrencyCode with @Common.ValueList.entity:'sap_common_Currencies';
  annotate CountryCode  with @Common.ValueList.entity:'sap_common_Countries';
  annotate Language with @Common.ValueList.entity:'sap_common_Languages';
  annotate Currency with @Common.ValueList.entity:'sap_common_Currencies';
  annotate Country  with @Common.ValueList.entity:'sap_common_Countries';
  annotate sap.common.CodeList with @UI.Identification: [name];

  annotate managed with {
  	createdAt @UI.HiddenFilter;
  	createdBy @UI.HiddenFilter;
  	modifiedAt @UI.HiddenFilter;
  	modifiedBy @UI.HiddenFilter;
  }

  annotate managed with {
  	createdAt @Core.Immutable;
  	createdBy @Core.Immutable;
  	modifiedAt @Core.Immutable;
  	modifiedBy @Core.Immutable;
  }


//---------------------------------------------------------------------------
// Common Annotations...

  annotate LanguageCode with @( title:'{i18n>LanguageCode}', description:'{i18n>LanguageCode.Description}' );
  annotate CurrencyCode with @( title:'{i18n>CurrencyCode}', description:'{i18n>CurrencyCode.Description}' );
  annotate CountryCode  with @( title:'{i18n>CountryCode}', description:'{i18n>CountryCode.Description}' );
  annotate Language with @( title:'{i18n>Language}', description:'{i18n>LanguageCode.Description}' );
  annotate Currency with @( title:'{i18n>Currency}', description:'{i18n>CurrencyCode.Description}' );
  annotate Country  with @( title:'{i18n>Country}', description:'{i18n>CountryCode.Description}' );
  annotate User with @( title:'{i18n>UserID}', description:'{i18n>UserID.Description}' );

  annotate managed with {
  	createdAt  @title:'{i18n>CreatedAt}';
  	createdBy  @title:'{i18n>CreatedBy}';
  	modifiedAt @title:'{i18n>ChangedAt}';
  	modifiedBy @title:'{i18n>ChangedBy}';
  }


//---------------------------------------------------------------------------
// Temporary Workarounds...

  // REVISIT: change @odata.on... to @cds.on...
  // REVISIT: @cds.on... should automatically result in @readonly @Core.Computed

  annotate managed with {
    modifiedAt @readonly @odata.on.update: #now;
    createdAt  @readonly @odata.on.insert: #now;
    createdBy  @readonly @odata.on.insert: #user;
    modifiedBy @readonly @odata.on.update: #user;
  }

//---------------------------------------------------------------------------
