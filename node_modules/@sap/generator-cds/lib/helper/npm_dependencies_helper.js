const Logger = require('../logger/logger');
const ExecHelper = require('./exec_helper');


class NpmDepedenciesHelper {

    static updateDependencies(dependencies = {}, debug = false) {

        const promises = [];
        const result = {};

        Object.keys(dependencies).forEach((module) => {
            // add here to ensure the right sequence in new object
            result[module] = dependencies[module];
            if (dependencies[module] === NpmDepedenciesHelper.REPLACE_TOKEN) {
                const cmd = ['npm', 'show', module, 'version']

                if (debug) {
                    cmd.push('-dd');
                }
                const promise = ExecHelper.executeCommand(cmd)
                    .then((version) => {
                        result[module] = `^${version.trim()}`;
                    })
                    .catch((err) => {
                        // hide stack trace
                        Logger.warn(err.message);
                    });

                promises.push(promise);
            }
        });

        return Promise.all(promises).then(() => {
            return Promise.resolve(result);
        });
    }

}

NpmDepedenciesHelper.REPLACE_TOKEN = '$LATEST';

module.exports = NpmDepedenciesHelper;
