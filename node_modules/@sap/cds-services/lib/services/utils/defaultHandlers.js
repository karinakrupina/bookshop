const { getScenario } = require('./handlerUtils')

const _getDraftAdminDataHandlers = () => {
  return new Map([
    [
      '@readonly',
      {
        before: new Map([]),
        on: new Map([['READ', 'onReadDraft']]),
        reject: ['CREATE', 'UPDATE', 'DELETE']
      }
    ],
    [
      '@insertonly',
      {
        before: new Map([]),
        on: new Map([]),
        reject: ['READ', 'CREATE', 'DELETE', 'UPDATE']
      }
    ],
    [
      'default',
      {
        before: new Map([]),
        on: new Map([['READ', 'onReadDraft']]),
        reject: ['CREATE', 'UPDATE', 'DELETE']
      }
    ]
  ])
}

const _getDraftEnabledEntityHandlers = isRoot => {
  return new Map([
    [
      '@readonly',
      {
        before: new Map([]),
        on: new Map([['READ', 'onReadDraft']]),
        reject: ['CREATE', 'UPDATE', 'DELETE']
      }
    ],
    [
      '@insertonly',
      {
        before: new Map([['CREATE', 'beforeCreateDraft']]),
        on: new Map([['CREATE', 'onCreateDraft'], ['UPDATE', 'onUpdateDraft'], ['draftPrepare', 'onDraftPrepare']]),
        reject: ['READ', 'DELETE']
      }
    ],
    [
      'default',
      {
        before: new Map([
          ['CREATE', 'beforeCreateDraft'],
          ['UPDATE', 'beforeUpdateDraft'],
          ['DELETE', 'beforeDeleteDraft']
        ]),
        on: new Map([
          ['READ', 'onReadDraft'],
          ['CREATE', 'onCreateDraft'],
          ['UPDATE', 'onUpdateDraft'],
          ['DELETE', 'onDeleteDraft'],
          ...(isRoot
            ? [
              ['draftPrepare', 'onDraftPrepare'],
              ['draftActivate', 'onDraftActivateEvent'],
              ['draftEdit', 'onDraftEdit']
            ]
            : [])
        ]),
        reject: []
      }
    ]
  ])
}

const _getDefaultHandlers = isDraftEnabledService => {
  return new Map([
    [
      '@readonly',
      {
        before: new Map([]),
        on: new Map([['READ', isDraftEnabledService ? 'onReadOverDraft' : 'onRead']]),
        reject: ['CREATE', 'UPDATE', 'DELETE']
      }
    ],
    [
      '@insertonly',
      {
        before: new Map([['CREATE', 'beforeCreate']]),
        on: new Map([['CREATE', 'onCreate']]),
        reject: ['READ', 'DELETE', 'UPDATE']
      }
    ],
    [
      'default',
      {
        before: new Map([['CREATE', 'beforeCreate'], ['UPDATE', 'beforeUpdate']]),
        on: new Map([
          ['READ', isDraftEnabledService ? 'onReadOverDraft' : 'onRead'],
          ['CREATE', 'onCreate'],
          ['UPDATE', 'onUpdate'],
          ['DELETE', 'onDelete']
        ]),
        reject: []
      }
    ]
  ])
}

const getDefaultHandlers = (isDraftEnabledService, isDraftEnabledEntity, isDraftRoot, entityName) => {
  if (isDraftEnabledService) {
    if (entityName.endsWith('DraftAdministrativeData')) {
      return _getDraftAdminDataHandlers()
    }

    if (isDraftEnabledEntity) {
      return _getDraftEnabledEntityHandlers(isDraftRoot)
    }
  }

  return _getDefaultHandlers(isDraftEnabledService)
}

module.exports = { getDefaultHandlers, getScenario }
