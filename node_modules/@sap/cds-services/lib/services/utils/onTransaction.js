const cds = require('../../cds')

/**
 * After the commit there shall be no access to .run or the client.
 * Reference might have been copied, but cannot be supported.
 * @param {Object} context
 * @return {Client}
 * @private
 */
const _removeNoLongerNeededSession = context => {
  // Copy reference, so context can be wiped of related properties
  const dbc = context._.dbc

  delete context.run
  delete context._.dbc

  return dbc
}

module.exports = async (context, command) => {
  const dbc = _removeNoLongerNeededSession(context)

  // In case there is no dbc
  if (!dbc) {
    return
  }

  // An error has occurred and there is no client
  if (dbc.stack) {
    throw dbc
  }

  /*
   * If a commit or rollback fails, there is something seriously wrong with the client.
   * Such a client needs to be destroyed rather than reused.
   */
  try {
    await dbc[command]()

    return await cds.session.release(dbc)
  } catch (err) {
    await cds.session.destroy(dbc)
    // Success of destroy must trigger the error handling.
    throw err
  }
}
