const processDeep = (callbackFn, data, entity, skipRoot, isRoot) => {
  if (!Array.isArray(data)) {
    processDeep(callbackFn, [data], entity, skipRoot, isRoot)
    return
  }
  data.forEach(entry => {
    if (!(skipRoot && isRoot)) {
      callbackFn(entry, entity, isRoot)
    }

    Object.keys(entity.elements || {}).forEach(key => {
      const element = entity.elements[key]
      if (element.type === 'cds.Composition' && entry[element.name]) {
        const subData = Array.isArray(entry[element.name]) ? entry[element.name] : [entry[element.name]]
        processDeep(callbackFn, subData, element._target, false, false)
      }
    })
  })
}

const processDeepAsync = async (callbackFn, data, entity, skipRoot, isRoot) => {
  if (!Array.isArray(data)) {
    return processDeepAsync(callbackFn, [data], entity, skipRoot, isRoot)
  }
  return Promise.all(
    data.map(async entry => {
      if (!(skipRoot && isRoot)) {
        await callbackFn(entry, entity, isRoot)
      }
      return Promise.all(
        Object.keys(entity.elements || {}).map(async key => {
          const element = entity.elements[key]
          if (element.type === 'cds.Composition' && entry[element.name]) {
            const subData = Array.isArray(entry[element.name]) ? entry[element.name] : [entry[element.name]]
            return processDeepAsync(callbackFn, subData, element._target, false, false)
          }
        })
      )
    })
  )
}

/**
 * This method adds default values to data for not elements having default values
 * @private
 */
const addDefaultValuesFlat = (data, entity) => {
  const elements = entity.elements
  for (const column of Object.keys(elements)) {
    const col = elements[column]
    if (col.default !== undefined && data[col.name] === undefined) {
      data[col.name] = col.default.val || col.default // OLD CSN
    }
  }
}

const addDefaultValuesDeep = (data, entity) => {
  processDeep(
    (data, entity) => {
      addDefaultValuesFlat(data, entity)
    },
    data,
    entity,
    false,
    true
  )
}

module.exports = {
  processDeep,
  processDeepAsync,
  addDefaultValuesFlat,
  addDefaultValuesDeep
}
