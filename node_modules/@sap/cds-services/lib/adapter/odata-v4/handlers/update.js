const { Components: { DATA_UPDATE_HANDLER } } = require('@sap/odata-server')
const getContextObject = require('../utils/context-object')
const { toODataResult } = require('../utils/event')
const { validateResourcePathLength } = require('../utils/request')

/**
 * The handler that will be registered with odata-v4.
 *
 * In case of success it calls next with the number of updated entries as result.
 * In case of error it calls next with error.
 *
 * @param {Service} service
 * @param {Object} options
 * @return {Function}
 */
const update = (service, options) => {
  return (req, res, next) => {
    // End here if length is greater then allowed
    validateResourcePathLength(req, options)

    const context = getContextObject(DATA_UPDATE_HANDLER, service, req, res)

    service
      .processEvent('UPDATE', context)
      .then(result => {
        next(null, toODataResult(result[0]))
      })
      .catch(err => {
        next(err)
      })
  }
}

module.exports = update
