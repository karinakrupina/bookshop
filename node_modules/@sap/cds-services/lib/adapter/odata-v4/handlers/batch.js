/**
 * Start of an atomicity group of $batch
 * @return {Function}
 */
const start = (odataContext, done) => {
  odataContext.applicationData.doNotFinishTransaction = true
  done()
}

/**
 * End of an atomicity group of $batch
 * @return {Function}
 */
const end = async (odataErr, odataContext, done) => {
  // Might not be added or already removed. In any case means no DB client left.
  if (!odataContext.applicationData || !odataContext.applicationData.endTransactionIfConnected) {
    done()
    return
  }

  const command = odataErr || odataContext.failedRequests.length > 0 ? 'ROLLBACK' : 'COMMIT'
  odataContext.applicationData.doNotFinishTransaction = false

  try {
    await odataContext.applicationData.endTransactionIfConnected(command, {
      _: odataContext.applicationData
    })
  } catch (err) {
    done(err)
  }

  done()
}

module.exports = {
  start,
  end
}
