'use strict';

const Command = require('./Command');

/**
* The `next` callback to be called upon finish execution.
*
* @callback Next
* @param {?Error} error An error if there is one or null if not
*/

/**
 * Executes the validation of the request headers.
 *
 * @extends Command
 */
class OdataVersionValidationCommand extends Command {

    /**
     * Creates an instance of the OdataVersionValidationCommand
     *
     * @param {OdataRequest} request the current OData request
     * @param {RequestValidator} requestValidator The current request validator
     * @param {string} version the supported OData version
     * @param {LoggerFacade} logger the logger
     * @param {...string} headers The headers to validate
     */
    constructor(request, requestValidator, version, logger, ...headers) {
        super();
        this._request = request;
        this._requestValidator = requestValidator;
        this._version = version;
        this._logger = logger;
        this._headers = headers;
    }

    /**
     * Executes the registered request header validator.
     * @param {Next} next The next callback to be called on finish
     */
    execute(next) {
        this._logger.path('Entering OdataVersionValidationCommand.execute()...');

        this._requestValidator.validateHeaders(this._version, this._request.getHeaders(), ...this._headers);

        next();
    }
}

module.exports = OdataVersionValidationCommand;
