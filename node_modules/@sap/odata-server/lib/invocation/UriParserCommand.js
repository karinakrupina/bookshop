'use strict';

const Command = require('./Command');

/**
* The `next` callback to be called upon finish execution.
*
* @callback Next
* @param {?Error} error An error if there is one or null if not
*/

/**
 * Executes the uri parser.
 *
 * @extends Command
 */
class UriParserCommand extends Command {

    /**
     * Creates an instance of the UriParserCommand.
     *
     * @param {UriParser} uriParser the URI parser
     * @param {OdataRequest} request the current OData request
     * @param {LoggerFacade} logger the logger
     */
    constructor(uriParser, request, logger) {
        super();
        this._uriParser = uriParser;
        this._request = request;
        this._logger = logger;
    }

    /**
     * Execute the uri parsing and set the resulting uri info object to odata request.
     *
     * @param {Next} next The callback to be called on finish
     */
    execute(next) {
        this._logger.path('Entering UriParserCommand.execute()...');
        this._logger.info('Start uri parsing...');

        const uriInfo = this._uriParser.parseRelativeUri(this._request.getOdataPath(), this._request.getQueryOptions());
        this._logger.debug('Parsed path segments: ', uriInfo.getPathSegments()
            .map(segment => 'Kind: ' + segment.getKind() + ', Name: ' + segment.getPathSegmentIdentifier()));
        this._request.setUriInfo(uriInfo);

        next();
    }
}

module.exports = UriParserCommand;
